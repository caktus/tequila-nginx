upstream {{ project_name }}  {
    server localhost:{{ project_port }};
}

{% macro serve_django() -%}
    root {{ public_dir }};
    keepalive_timeout 5;

    {% if redirect_domains|default([]) %}
    if ($host ~* ^({{ redirect_domains | default([]) | join('|') }})$) {
        return 301 $scheme://{{ domain }}$request_uri;
    }
    {% endif %}

    if ($host !~* ^({{ domain_list | join('|') }})$) {
        # Deny non-matching Host headers
        return 444;
    }

    location /.well-known {
        alias {{ public_dir }}/.well-known;
    }

    location /robots.txt {
        alias {{ static_dir }}/robots.txt;
    }

    location /media {
        alias {{ media_dir }};
    }

    location /static {
        gzip on;
        alias {{ static_dir }};
        expires max;
        add_header Cache-Control public;
    }

    error_page 502 503 504 /502.html;

    location /502.html {
        alias {{ static_dir }}/502.html;
    }

    location / {
        gzip off;
        {% if http_auth %}
        {# Why do we do this? To allow CORS preflight requests in, of course. #}
        if ($request_method != OPTIONS ) {
            set $auth_basic "Restricted";
        }
        if ($request_method = OPTIONS) {
            set $auth_basic off;
        }
        auth_basic "Restricted";
        auth_basic_user_file {{ auth_file }};
        {% endif %}

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $host;

        proxy_redirect off;
        proxy_buffering on;
        proxy_intercept_errors on;
        add_header P3P 'CP="Hello IE"';
        proxy_pass http://{{ project_name }};

        client_max_body_size {{ client_max_body_size|default('1m') }};
    }
{%- endmacro %}

server {
    listen {{ nginx_http_port }};
    server_name {{ domain_list | join(' ') }};

    access_log syslog:server=unix:/dev/log;
    error_log syslog:server=unix:/dev/log;

    {% if force_ssl %}
    {# redirect all non-https requests to https #}
    {# if there's no forwarded proto value, always redirect #}
    if ($http_x_forwarded_proto = '') {
        return 301 https://{{ domain }}$request_uri;
    }
    {# if there is a forwarded proto value and it's not https, redirect #}
    if ($http_x_forwarded_proto != 'https') {
        return 301 https://{{ domain }}$request_uri;
    }
    {# otherwise, proceed #}
    {% endif %}

    {{ serve_django() }}
}

{% if cert_source != 'none' %}
server {
    listen {{ nginx_https_port }};
    server_name {{ domain_list | join(' ') }};

    access_log syslog:server=unix:/dev/log;
    error_log syslog:server=unix:/dev/log;

    ssl on;
    ssl_protocols  TLSv1 TLSv1.1 TLSv1.2;
    ssl_session_cache   shared:SSL:10m;
    ssl_session_timeout  10m;
    ssl_certificate {{ ssl_dir }}/{{ domain }}.crt;
    ssl_certificate_key {{ ssl_dir }}/{{ domain }}.key;
    {% if env_name != 'local' %}
    ssl_dhparam {{ dhparams_file }};
    {% endif %}
    # cipher list from: https://weakdh.org/sysadmin.html
    ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
    ssl_prefer_server_ciphers   on;

    {% if force_ssl %}
    add_header Strict-Transport-Security max-age=31536000;
    {# if there is a forwarded proto value and it's set to 'http' (i.e., if we're sitting behind another load balancer that is forwarding its port 80 to our port 443), redirect #}
    if ($http_x_forwarded_proto = 'http') {
        return 301 https://$host$request_uri;
    }
    {% endif %}

    {{ serve_django() }}
}
{% endif %}
